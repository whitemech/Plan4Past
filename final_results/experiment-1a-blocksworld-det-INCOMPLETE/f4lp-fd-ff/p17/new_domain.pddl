(define (domain blocks-domain)
	(:requirements :strips)
	(:types block)
	(:predicates (ontable ?x - block) (on ?x - block ?y - block) (clear ?x - block) (emptyhand) (holding ?x - block) (q1 ?x-00 - block ?y-01 - block ?y-02 - block) (q2 ?x-00 - block ?y-01 - block ?y-02 - block) (q3 ?x-00 - block ?y-01 - block ?y-02 - block) (turnDomain))
	(:action pick-up
		:parameters (?x - block)
		:precondition (and (clear ?x) (ontable ?x) (emptyhand) (turnDomain))
		:effect (and (not (ontable ?x)) (not (clear ?x)) (not (emptyhand)) (holding ?x) (not (turnDomain)))
	)
	(:action put-down
		:parameters (?x - block)
		:precondition (and (holding ?x) (turnDomain))
		:effect (and (not (holding ?x)) (clear ?x) (emptyhand) (ontable ?x) (not (turnDomain)))
	)
	(:action stack
		:parameters (?x - block ?y - block)
		:precondition (and (holding ?x) (clear ?y) (turnDomain))
		:effect (and (not (holding ?x)) (not (clear ?y)) (clear ?x) (emptyhand) (on ?x ?y) (not (turnDomain)))
	)
	(:action unstack
		:parameters (?x - block ?y - block)
		:precondition (and (on ?x ?y) (clear ?x) (emptyhand) (turnDomain))
		:effect (and (holding ?x) (clear ?y) (not (clear ?x)) (not (emptyhand)) (not (on ?x ?y)) (not (turnDomain)))
	)
	(:action trans-0
		:parameters (?x-00 - block ?y-01 - block ?y-02 - block)
		:precondition (and (q1 ?x-00 ?y-01 ?y-02) (not (on ?y-01 ?y-02)) (not (turnDomain)))
		:effect (and (q1 ?x-00 ?y-01 ?y-02) (not (q2 ?x-00 ?y-01 ?y-02)) (not (q3 ?x-00 ?y-01 ?y-02)) (turnDomain))
	)
	(:action trans-1
		:parameters (?x-00 - block ?y-01 - block ?y-02 - block)
		:precondition (and (or (and (q1 ?x-00 ?y-01 ?y-02) (on ?y-01 ?y-02)) (and (q2 ?x-00 ?y-01 ?y-02) (not (on ?x-00 ?y-01)))) (not (turnDomain)))
		:effect (and (q2 ?x-00 ?y-01 ?y-02) (not (q1 ?x-00 ?y-01 ?y-02)) (not (q3 ?x-00 ?y-01 ?y-02)) (turnDomain))
	)
	(:action trans-2
		:parameters (?x-00 - block ?y-01 - block ?y-02 - block)
		:precondition (and (or (and (q2 ?x-00 ?y-01 ?y-02) (on ?x-00 ?y-01)) (q3 ?x-00 ?y-01 ?y-02)) (not (turnDomain)))
		:effect (and (q3 ?x-00 ?y-01 ?y-02) (not (q1 ?x-00 ?y-01 ?y-02)) (not (q2 ?x-00 ?y-01 ?y-02)) (turnDomain))
	)
)