[tox]
envlist = bandit, black-check, check-copyright, darglint, docs, flake8, isort-check, mypy, safety, pylint, vulture, py3{8,9,10,11}
labels = 
	code = py3{8,9,10,11}
	meta = bandit, black-check, check-copyright, darglint, docs, flake8, isort-check, mypy, safety, pylint, vulture

[testenv]
allowlist_externals = pytest
setenv = 
	PYTHONPATH = {toxinidir}
deps = 
	pytest>=7.3.1,<7.4.0
	pytest-cov>=4.1.0,<4.2.0
	pytest-randomly>=3.12.0,<3.13.0
	pytest-lazy-fixture>=0.6.3,<0.7.0
	mistune>=2.0.5,<2.1.0
commands = 
	pytest --basetemp={envtmpdir} --doctest-modules \
	{posargs:plan4past tests} \
	--cov=plan4past \
	--cov-report=xml \
	--cov-report=html \
	--cov-report=term

[testenv:py{38,39,310,311}]
commands = 
	{[testenv]commands}
deps = 

[testenv:flake8]
skip_install = True
deps = 
	flake8>=6.0.0,<6.1.0
	flake8-docstrings>=1.7.0,<1.8.0
	flake8-bugbear>=23.6.5,<23.7.0
	flake8-isort>=6.0.0,<6.1.0
commands = 
	flake8 plan4past tests

[testenv:mypy]
skip_install = True
deps = 
	mypy>=1.3.0,<1.4.0
	types-click>=7.1.8,<7.2.0
commands = 
	mypy plan4past tests

[testenv:black]
skip_install = True
deps = black>=23.3.0,<23.4.0
commands = black plan4past tests

[testenv:black-check]
skip_install = True
deps = black>=23.3.0,<23.4.0
commands = black plan4past tests --check --verbose

[testenv:isort]
skip_install = True
deps = isort>=5.12.0,<5.13.0
commands = isort plan4past tests

[testenv:isort-check]
skip_install = True
deps = isort>=5.12.0,<5.13.0
commands = isort --check-only plan4past tests

[testenv:bandit]
skipsdist = True
skip_install = True
deps = bandit>=1.7.5,<1.8.0
commands = bandit --configfile .bandit.yml --recursive plan4past tests scripts

[testenv:pylint]
skipdist = True
deps = pylint>=2.17.4,<2.18.0
commands = pylint plan4past tests

[testenv:safety]
skipsdist = False
skip_install = False
deps = safety>=2.3.5,<2.4.0
commands = safety check

[testenv:vulture]
skipsdist = True
skip_install = True
deps = vulture>=2.7,<3
commands = vulture plan4past scripts/whitelist.py

[testenv:docs]
skip_install = True
deps = 
	mkdocs>=1.4.3,<1.5.0
	mkdocs-material>=9.1.15,<9.2.0
	markdown-include>=0.8.1,<0.9.0
	pymdown-extensions>=10.0.1,<10.1.0
commands = 
	mkdocs build --clean

[testenv:docs-serve]
skip_install = True
deps = 
	mkdocs>=1.4.3,<1.5.0
	mkdocs-material>=9.1.15,<9.2.0
	markdown-include>=0.8.1,<0.9.0
	pymdown-extensions>=10.0.1,<10.1.0
commands = 
	mkdocs build --clean
	python -c 'print("###### Starting local server. Press Control+C to stop server ######")'
	mkdocs serve

[testenv:check-copyright]
skip_install = True
deps = 
commands = python scripts/check_copyright.py

