(define (domain blocks-domain)
    (:requirements :conditional-effects :derived-predicates :negative-preconditions :strips)
    (:types block)
    (:predicates (clear ?x) (emptyhand) (holding ?x) (on ?x ?y) (ontable ?x) (val_on_a1_v) (val_on_a_e) (val_on_b_y) (val_on_c_m) (val_on_d_b) (val_on_e_h) (val_on_f_z) (val_on_g_a1) (val_on_h_o) (val_on_i_n) (val_on_j_s) (val_on_k_i) (val_on_l_d) (val_on_l_d-and-on_d_b-and-on_b_y-and-on_y_a-and-on_a_e-and-on_e_h-and-on_h_o-and-on_o_w-and-on_w_j-and-on_j_s-and-on_s_f-and-on_f_z-and-on_z_g-and-on_g_a1-and-on_a1_v-and-on_v_u-and-on_u_x-and-on_x_k-and-on_k_i-and-on_i_n-and-on_n_q-and-on_q_c-and-on_c_m-and-on_m_t-and-on_t_p-and-on_p_r) (val_on_m_t) (val_on_n_q) (val_on_o_w) (val_on_p_r) (val_on_q_c) (val_on_s_f) (val_on_t_p) (val_on_u_x) (val_on_v_u) (val_on_w_j) (val_on_x_k) (val_on_y_a) (val_on_z_g))
    (:derived (val_on_a1_v) (on a1 v))
     (:derived (val_on_a_e) (on a e))
     (:derived (val_on_b_y) (on b y))
     (:derived (val_on_c_m) (on c m))
     (:derived (val_on_d_b) (on d b))
     (:derived (val_on_e_h) (on e h))
     (:derived (val_on_f_z) (on f z))
     (:derived (val_on_g_a1) (on g a1))
     (:derived (val_on_h_o) (on h o))
     (:derived (val_on_i_n) (on i n))
     (:derived (val_on_j_s) (on j s))
     (:derived (val_on_k_i) (on k i))
     (:derived (val_on_l_d) (on l d))
     (:derived (val_on_l_d-and-on_d_b-and-on_b_y-and-on_y_a-and-on_a_e-and-on_e_h-and-on_h_o-and-on_o_w-and-on_w_j-and-on_j_s-and-on_s_f-and-on_f_z-and-on_z_g-and-on_g_a1-and-on_a1_v-and-on_v_u-and-on_u_x-and-on_x_k-and-on_k_i-and-on_i_n-and-on_n_q-and-on_q_c-and-on_c_m-and-on_m_t-and-on_t_p-and-on_p_r) (and (val_on_l_d) (val_on_d_b) (val_on_b_y) (val_on_y_a) (val_on_a_e) (val_on_e_h) (val_on_h_o) (val_on_o_w) (val_on_w_j) (val_on_j_s) (val_on_s_f) (val_on_f_z) (val_on_z_g) (val_on_g_a1) (val_on_a1_v) (val_on_v_u) (val_on_u_x) (val_on_x_k) (val_on_k_i) (val_on_i_n) (val_on_n_q) (val_on_q_c) (val_on_c_m) (val_on_m_t) (val_on_t_p) (val_on_p_r)))
     (:derived (val_on_m_t) (on m t))
     (:derived (val_on_n_q) (on n q))
     (:derived (val_on_o_w) (on o w))
     (:derived (val_on_p_r) (on p r))
     (:derived (val_on_q_c) (on q c))
     (:derived (val_on_s_f) (on s f))
     (:derived (val_on_t_p) (on t p))
     (:derived (val_on_u_x) (on u x))
     (:derived (val_on_v_u) (on v u))
     (:derived (val_on_w_j) (on w j))
     (:derived (val_on_x_k) (on x k))
     (:derived (val_on_y_a) (on y a))
     (:derived (val_on_z_g) (on z g))
    (:action pick-up
        :parameters (?x)
        :precondition (and (clear ?x) (ontable ?x) (emptyhand))
        :effect (and (and (not (ontable ?x)) (not (clear ?x)) (not (emptyhand)) (holding ?x)))
    )
     (:action put-down
        :parameters (?x)
        :precondition (holding ?x)
        :effect (and (and (not (holding ?x)) (clear ?x) (emptyhand) (ontable ?x)))
    )
     (:action stack
        :parameters (?x ?y)
        :precondition (and (holding ?x) (clear ?y))
        :effect (and (and (not (holding ?x)) (not (clear ?y)) (clear ?x) (emptyhand) (on ?x ?y)))
    )
     (:action unstack
        :parameters (?x ?y)
        :precondition (and (on ?x ?y) (clear ?x) (emptyhand))
        :effect (and (and (holding ?x) (clear ?y) (not (clear ?x)) (not (emptyhand)) (not (on ?x ?y))))
    )
)