(define (domain blocks-domain)
    (:requirements :conditional-effects :derived-predicates :negative-preconditions :strips)
    (:types block)
    (:predicates (clear ?x) (emptyhand) (holding ?x) (on ?x ?y) (ontable ?x) (val_on_a_h) (val_on_b_g) (val_on_c_i) (val_on_e_o) (val_on_f_j) (val_on_g_a) (val_on_h_e) (val_on_i_k) (val_on_j_b) (val_on_k_f) (val_on_l_n) (val_on_m_d) (val_on_n_c) (val_on_o_m) (val_on_p_q) (val_on_p_q-and-on_q_l-and-on_l_n-and-on_n_c-and-on_c_i-and-on_i_k-and-on_k_f-and-on_f_j-and-on_j_b-and-on_b_g-and-on_g_a-and-on_a_h-and-on_h_e-and-on_e_o-and-on_o_m-and-on_m_d) (val_on_q_l))
    (:derived (val_on_a_h) (on a h))
     (:derived (val_on_b_g) (on b g))
     (:derived (val_on_c_i) (on c i))
     (:derived (val_on_e_o) (on e o))
     (:derived (val_on_f_j) (on f j))
     (:derived (val_on_g_a) (on g a))
     (:derived (val_on_h_e) (on h e))
     (:derived (val_on_i_k) (on i k))
     (:derived (val_on_j_b) (on j b))
     (:derived (val_on_k_f) (on k f))
     (:derived (val_on_l_n) (on l n))
     (:derived (val_on_m_d) (on m d))
     (:derived (val_on_n_c) (on n c))
     (:derived (val_on_o_m) (on o m))
     (:derived (val_on_p_q) (on p q))
     (:derived (val_on_p_q-and-on_q_l-and-on_l_n-and-on_n_c-and-on_c_i-and-on_i_k-and-on_k_f-and-on_f_j-and-on_j_b-and-on_b_g-and-on_g_a-and-on_a_h-and-on_h_e-and-on_e_o-and-on_o_m-and-on_m_d) (and (val_on_p_q) (val_on_q_l) (val_on_l_n) (val_on_n_c) (val_on_c_i) (val_on_i_k) (val_on_k_f) (val_on_f_j) (val_on_j_b) (val_on_b_g) (val_on_g_a) (val_on_a_h) (val_on_h_e) (val_on_e_o) (val_on_o_m) (val_on_m_d)))
     (:derived (val_on_q_l) (on q l))
    (:action pick-up
        :parameters (?x)
        :precondition (and (clear ?x) (ontable ?x) (emptyhand))
        :effect (and (and (not (ontable ?x)) (not (clear ?x)) (not (emptyhand)) (holding ?x)))
    )
     (:action put-down
        :parameters (?x)
        :precondition (holding ?x)
        :effect (and (and (not (holding ?x)) (clear ?x) (emptyhand) (ontable ?x)))
    )
     (:action stack
        :parameters (?x ?y)
        :precondition (and (holding ?x) (clear ?y))
        :effect (and (and (not (holding ?x)) (not (clear ?y)) (clear ?x) (emptyhand) (on ?x ?y)))
    )
     (:action unstack
        :parameters (?x ?y)
        :precondition (and (on ?x ?y) (clear ?x) (emptyhand))
        :effect (and (and (holding ?x) (clear ?y) (not (clear ?x)) (not (emptyhand)) (not (on ?x ?y))))
    )
)