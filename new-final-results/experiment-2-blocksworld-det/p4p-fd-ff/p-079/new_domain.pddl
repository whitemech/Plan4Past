(define (domain blocks-domain)
    (:requirements :conditional-effects :derived-predicates :negative-preconditions :strips)
    (:types block)
    (:predicates (clear ?x) (emptyhand) (holding ?x) (on ?x ?y) (ontable ?x) (val_on_a1_v) (val_on_a_l) (val_on_b1_s) (val_on_b_p) (val_on_b_p-and-on_p_f1-and-on_f1_g1-and-on_g1_e-and-on_e_j-and-on_j_w-and-on_w_o-and-on_o_e1-and-on_e1_n-and-on_n_u-and-on_u_b1-and-on_b1_s-and-on_s_m1-and-on_m1_h-and-on_h_c1-and-on_c1_r-and-on_r_t-and-on_t_y-and-on_y_k1-and-on_k1_j1-and-on_j1_d-and-on_d_i1-and-on_i1_i-and-on_i_x-and-on_x_q-and-on_q_m-and-on_m_g-and-on_g_l1-and-on_l1_a1-and-on_a1_v-and-on_v_d1-and-on_d1_k-and-on_k_h1-and-on_h1_c-and-on_c_z-and-on_z_a-and-on_a_l-and-on_l_f) (val_on_c1_r) (val_on_c_z) (val_on_d1_k) (val_on_d_i1) (val_on_e1_n) (val_on_e_j) (val_on_f1_g1) (val_on_g1_e) (val_on_g_l1) (val_on_h1_c) (val_on_h_c1) (val_on_i1_i) (val_on_i_x) (val_on_j1_d) (val_on_j_w) (val_on_k1_j1) (val_on_k_h1) (val_on_l1_a1) (val_on_l_f) (val_on_m1_h) (val_on_m_g) (val_on_n_u) (val_on_o_e1) (val_on_p_f1) (val_on_q_m) (val_on_r_t) (val_on_s_m1) (val_on_t_y) (val_on_u_b1) (val_on_v_d1) (val_on_w_o) (val_on_x_q) (val_on_y_k1) (val_on_z_a))
    (:derived (val_on_a1_v) (on a1 v))
     (:derived (val_on_a_l) (on a l))
     (:derived (val_on_b1_s) (on b1 s))
     (:derived (val_on_b_p) (on b p))
     (:derived (val_on_b_p-and-on_p_f1-and-on_f1_g1-and-on_g1_e-and-on_e_j-and-on_j_w-and-on_w_o-and-on_o_e1-and-on_e1_n-and-on_n_u-and-on_u_b1-and-on_b1_s-and-on_s_m1-and-on_m1_h-and-on_h_c1-and-on_c1_r-and-on_r_t-and-on_t_y-and-on_y_k1-and-on_k1_j1-and-on_j1_d-and-on_d_i1-and-on_i1_i-and-on_i_x-and-on_x_q-and-on_q_m-and-on_m_g-and-on_g_l1-and-on_l1_a1-and-on_a1_v-and-on_v_d1-and-on_d1_k-and-on_k_h1-and-on_h1_c-and-on_c_z-and-on_z_a-and-on_a_l-and-on_l_f) (and (val_on_b_p) (val_on_p_f1) (val_on_f1_g1) (val_on_g1_e) (val_on_e_j) (val_on_j_w) (val_on_w_o) (val_on_o_e1) (val_on_e1_n) (val_on_n_u) (val_on_u_b1) (val_on_b1_s) (val_on_s_m1) (val_on_m1_h) (val_on_h_c1) (val_on_c1_r) (val_on_r_t) (val_on_t_y) (val_on_y_k1) (val_on_k1_j1) (val_on_j1_d) (val_on_d_i1) (val_on_i1_i) (val_on_i_x) (val_on_x_q) (val_on_q_m) (val_on_m_g) (val_on_g_l1) (val_on_l1_a1) (val_on_a1_v) (val_on_v_d1) (val_on_d1_k) (val_on_k_h1) (val_on_h1_c) (val_on_c_z) (val_on_z_a) (val_on_a_l) (val_on_l_f)))
     (:derived (val_on_c1_r) (on c1 r))
     (:derived (val_on_c_z) (on c z))
     (:derived (val_on_d1_k) (on d1 k))
     (:derived (val_on_d_i1) (on d i1))
     (:derived (val_on_e1_n) (on e1 n))
     (:derived (val_on_e_j) (on e j))
     (:derived (val_on_f1_g1) (on f1 g1))
     (:derived (val_on_g1_e) (on g1 e))
     (:derived (val_on_g_l1) (on g l1))
     (:derived (val_on_h1_c) (on h1 c))
     (:derived (val_on_h_c1) (on h c1))
     (:derived (val_on_i1_i) (on i1 i))
     (:derived (val_on_i_x) (on i x))
     (:derived (val_on_j1_d) (on j1 d))
     (:derived (val_on_j_w) (on j w))
     (:derived (val_on_k1_j1) (on k1 j1))
     (:derived (val_on_k_h1) (on k h1))
     (:derived (val_on_l1_a1) (on l1 a1))
     (:derived (val_on_l_f) (on l f))
     (:derived (val_on_m1_h) (on m1 h))
     (:derived (val_on_m_g) (on m g))
     (:derived (val_on_n_u) (on n u))
     (:derived (val_on_o_e1) (on o e1))
     (:derived (val_on_p_f1) (on p f1))
     (:derived (val_on_q_m) (on q m))
     (:derived (val_on_r_t) (on r t))
     (:derived (val_on_s_m1) (on s m1))
     (:derived (val_on_t_y) (on t y))
     (:derived (val_on_u_b1) (on u b1))
     (:derived (val_on_v_d1) (on v d1))
     (:derived (val_on_w_o) (on w o))
     (:derived (val_on_x_q) (on x q))
     (:derived (val_on_y_k1) (on y k1))
     (:derived (val_on_z_a) (on z a))
    (:action pick-up
        :parameters (?x)
        :precondition (and (clear ?x) (ontable ?x) (emptyhand))
        :effect (and (and (not (ontable ?x)) (not (clear ?x)) (not (emptyhand)) (holding ?x)))
    )
     (:action put-down
        :parameters (?x)
        :precondition (holding ?x)
        :effect (and (and (not (holding ?x)) (clear ?x) (emptyhand) (ontable ?x)))
    )
     (:action stack
        :parameters (?x ?y)
        :precondition (and (holding ?x) (clear ?y))
        :effect (and (and (not (holding ?x)) (not (clear ?y)) (clear ?x) (emptyhand) (on ?x ?y)))
    )
     (:action unstack
        :parameters (?x ?y)
        :precondition (and (on ?x ?y) (clear ?x) (emptyhand))
        :effect (and (and (holding ?x) (clear ?y) (not (clear ?x)) (not (emptyhand)) (not (on ?x ?y))))
    )
)