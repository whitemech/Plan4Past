(define (domain blocks-domain)
    (:requirements :conditional-effects :derived-predicates :negative-preconditions :strips)
    (:types block)
    (:predicates (clear ?x) (emptyhand) (holding ?x) (on ?x ?y) (ontable ?x) (val_on_b_n) (val_on_c_a) (val_on_d_b) (val_on_e_f) (val_on_f_r) (val_on_g_m) (val_on_h_g) (val_on_h_g-and-on_g_m-and-on_m_d-and-on_d_b-and-on_b_n-and-on_n_e-and-on_e_f-and-on_f_r-and-on_r_q-and-on_q_o-and-on_o_k-and-on_k_j-and-on_j_i-and-on_i_p-and-on_p_l-and-on_l_c-and-on_c_a) (val_on_i_p) (val_on_j_i) (val_on_k_j) (val_on_l_c) (val_on_m_d) (val_on_n_e) (val_on_o_k) (val_on_p_l) (val_on_q_o) (val_on_r_q))
    (:derived (val_on_b_n) (on b n))
     (:derived (val_on_c_a) (on c a))
     (:derived (val_on_d_b) (on d b))
     (:derived (val_on_e_f) (on e f))
     (:derived (val_on_f_r) (on f r))
     (:derived (val_on_g_m) (on g m))
     (:derived (val_on_h_g) (on h g))
     (:derived (val_on_h_g-and-on_g_m-and-on_m_d-and-on_d_b-and-on_b_n-and-on_n_e-and-on_e_f-and-on_f_r-and-on_r_q-and-on_q_o-and-on_o_k-and-on_k_j-and-on_j_i-and-on_i_p-and-on_p_l-and-on_l_c-and-on_c_a) (and (val_on_h_g) (val_on_g_m) (val_on_m_d) (val_on_d_b) (val_on_b_n) (val_on_n_e) (val_on_e_f) (val_on_f_r) (val_on_r_q) (val_on_q_o) (val_on_o_k) (val_on_k_j) (val_on_j_i) (val_on_i_p) (val_on_p_l) (val_on_l_c) (val_on_c_a)))
     (:derived (val_on_i_p) (on i p))
     (:derived (val_on_j_i) (on j i))
     (:derived (val_on_k_j) (on k j))
     (:derived (val_on_l_c) (on l c))
     (:derived (val_on_m_d) (on m d))
     (:derived (val_on_n_e) (on n e))
     (:derived (val_on_o_k) (on o k))
     (:derived (val_on_p_l) (on p l))
     (:derived (val_on_q_o) (on q o))
     (:derived (val_on_r_q) (on r q))
    (:action pick-up
        :parameters (?x)
        :precondition (and (clear ?x) (ontable ?x) (emptyhand))
        :effect (and (and (not (ontable ?x)) (not (clear ?x)) (not (emptyhand)) (holding ?x)))
    )
     (:action put-down
        :parameters (?x)
        :precondition (holding ?x)
        :effect (and (and (not (holding ?x)) (clear ?x) (emptyhand) (ontable ?x)))
    )
     (:action stack
        :parameters (?x ?y)
        :precondition (and (holding ?x) (clear ?y))
        :effect (and (and (not (holding ?x)) (not (clear ?y)) (clear ?x) (emptyhand) (on ?x ?y)))
    )
     (:action unstack
        :parameters (?x ?y)
        :precondition (and (on ?x ?y) (clear ?x) (emptyhand))
        :effect (and (and (holding ?x) (clear ?y) (not (clear ?x)) (not (emptyhand)) (not (on ?x ?y))))
    )
)