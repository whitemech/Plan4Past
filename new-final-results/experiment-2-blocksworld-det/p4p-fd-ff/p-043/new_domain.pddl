(define (domain blocks-domain)
    (:requirements :conditional-effects :derived-predicates :negative-preconditions :strips)
    (:types block)
    (:predicates (clear ?x) (emptyhand) (holding ?x) (on ?x ?y) (ontable ?x) (val_on_a_m) (val_on_b_e) (val_on_c_s) (val_on_d_a) (val_on_e_c) (val_on_g_i) (val_on_h_l) (val_on_h_l-and-on_l_b-and-on_b_e-and-on_e_c-and-on_c_s-and-on_s_p-and-on_p_o-and-on_o_r-and-on_r_k-and-on_k_t-and-on_t_u-and-on_u_q-and-on_q_j-and-on_j_n-and-on_n_g-and-on_g_i-and-on_i_d-and-on_d_a-and-on_a_m-and-on_m_f) (val_on_i_d) (val_on_j_n) (val_on_k_t) (val_on_l_b) (val_on_m_f) (val_on_n_g) (val_on_o_r) (val_on_p_o) (val_on_q_j) (val_on_r_k) (val_on_s_p) (val_on_t_u) (val_on_u_q))
    (:derived (val_on_a_m) (on a m))
     (:derived (val_on_b_e) (on b e))
     (:derived (val_on_c_s) (on c s))
     (:derived (val_on_d_a) (on d a))
     (:derived (val_on_e_c) (on e c))
     (:derived (val_on_g_i) (on g i))
     (:derived (val_on_h_l) (on h l))
     (:derived (val_on_h_l-and-on_l_b-and-on_b_e-and-on_e_c-and-on_c_s-and-on_s_p-and-on_p_o-and-on_o_r-and-on_r_k-and-on_k_t-and-on_t_u-and-on_u_q-and-on_q_j-and-on_j_n-and-on_n_g-and-on_g_i-and-on_i_d-and-on_d_a-and-on_a_m-and-on_m_f) (and (val_on_h_l) (val_on_l_b) (val_on_b_e) (val_on_e_c) (val_on_c_s) (val_on_s_p) (val_on_p_o) (val_on_o_r) (val_on_r_k) (val_on_k_t) (val_on_t_u) (val_on_u_q) (val_on_q_j) (val_on_j_n) (val_on_n_g) (val_on_g_i) (val_on_i_d) (val_on_d_a) (val_on_a_m) (val_on_m_f)))
     (:derived (val_on_i_d) (on i d))
     (:derived (val_on_j_n) (on j n))
     (:derived (val_on_k_t) (on k t))
     (:derived (val_on_l_b) (on l b))
     (:derived (val_on_m_f) (on m f))
     (:derived (val_on_n_g) (on n g))
     (:derived (val_on_o_r) (on o r))
     (:derived (val_on_p_o) (on p o))
     (:derived (val_on_q_j) (on q j))
     (:derived (val_on_r_k) (on r k))
     (:derived (val_on_s_p) (on s p))
     (:derived (val_on_t_u) (on t u))
     (:derived (val_on_u_q) (on u q))
    (:action pick-up
        :parameters (?x)
        :precondition (and (clear ?x) (ontable ?x) (emptyhand))
        :effect (and (and (not (ontable ?x)) (not (clear ?x)) (not (emptyhand)) (holding ?x)))
    )
     (:action put-down
        :parameters (?x)
        :precondition (holding ?x)
        :effect (and (and (not (holding ?x)) (clear ?x) (emptyhand) (ontable ?x)))
    )
     (:action stack
        :parameters (?x ?y)
        :precondition (and (holding ?x) (clear ?y))
        :effect (and (and (not (holding ?x)) (not (clear ?y)) (clear ?x) (emptyhand) (on ?x ?y)))
    )
     (:action unstack
        :parameters (?x ?y)
        :precondition (and (on ?x ?y) (clear ?x) (emptyhand))
        :effect (and (and (holding ?x) (clear ?y) (not (clear ?x)) (not (emptyhand)) (not (on ?x ?y))))
    )
)