(define (domain blocks-domain)
    (:requirements :conditional-effects :derived-predicates :negative-preconditions :strips)
    (:types block)
    (:predicates (clear ?x) (emptyhand) (holding ?x) (on ?x ?y) (ontable ?x) (val_on_a_d) (val_on_b_h) (val_on_c_s) (val_on_d_p) (val_on_e_b) (val_on_f_g) (val_on_g_m) (val_on_h_a) (val_on_i_j) (val_on_j_k) (val_on_k_e) (val_on_l_c) (val_on_l_c-and-on_c_s-and-on_s_i-and-on_i_j-and-on_j_k-and-on_k_e-and-on_e_b-and-on_b_h-and-on_h_a-and-on_a_d-and-on_d_p-and-on_p_n-and-on_n_o-and-on_o_r-and-on_r_q-and-on_q_f-and-on_f_g-and-on_g_m) (val_on_n_o) (val_on_o_r) (val_on_p_n) (val_on_q_f) (val_on_r_q) (val_on_s_i))
    (:derived (val_on_a_d) (on a d))
     (:derived (val_on_b_h) (on b h))
     (:derived (val_on_c_s) (on c s))
     (:derived (val_on_d_p) (on d p))
     (:derived (val_on_e_b) (on e b))
     (:derived (val_on_f_g) (on f g))
     (:derived (val_on_g_m) (on g m))
     (:derived (val_on_h_a) (on h a))
     (:derived (val_on_i_j) (on i j))
     (:derived (val_on_j_k) (on j k))
     (:derived (val_on_k_e) (on k e))
     (:derived (val_on_l_c) (on l c))
     (:derived (val_on_l_c-and-on_c_s-and-on_s_i-and-on_i_j-and-on_j_k-and-on_k_e-and-on_e_b-and-on_b_h-and-on_h_a-and-on_a_d-and-on_d_p-and-on_p_n-and-on_n_o-and-on_o_r-and-on_r_q-and-on_q_f-and-on_f_g-and-on_g_m) (and (val_on_l_c) (val_on_c_s) (val_on_s_i) (val_on_i_j) (val_on_j_k) (val_on_k_e) (val_on_e_b) (val_on_b_h) (val_on_h_a) (val_on_a_d) (val_on_d_p) (val_on_p_n) (val_on_n_o) (val_on_o_r) (val_on_r_q) (val_on_q_f) (val_on_f_g) (val_on_g_m)))
     (:derived (val_on_n_o) (on n o))
     (:derived (val_on_o_r) (on o r))
     (:derived (val_on_p_n) (on p n))
     (:derived (val_on_q_f) (on q f))
     (:derived (val_on_r_q) (on r q))
     (:derived (val_on_s_i) (on s i))
    (:action pick-up
        :parameters (?x)
        :precondition (and (clear ?x) (ontable ?x) (emptyhand))
        :effect (and (and (not (ontable ?x)) (not (clear ?x)) (not (emptyhand)) (holding ?x)))
    )
     (:action put-down
        :parameters (?x)
        :precondition (holding ?x)
        :effect (and (and (not (holding ?x)) (clear ?x) (emptyhand) (ontable ?x)))
    )
     (:action stack
        :parameters (?x ?y)
        :precondition (and (holding ?x) (clear ?y))
        :effect (and (and (not (holding ?x)) (not (clear ?y)) (clear ?x) (emptyhand) (on ?x ?y)))
    )
     (:action unstack
        :parameters (?x ?y)
        :precondition (and (on ?x ?y) (clear ?x) (emptyhand))
        :effect (and (and (holding ?x) (clear ?y) (not (clear ?x)) (not (emptyhand)) (not (on ?x ?y))))
    )
)