(define (domain blocks-domain)
    (:requirements :conditional-effects :derived-predicates :negative-preconditions :strips)
    (:types block)
    (:predicates (clear ?x) (emptyhand) (holding ?x) (on ?x ?y) (ontable ?x) (val_on_a_g) (val_on_b_i) (val_on_c_e) (val_on_e_m) (val_on_f_d) (val_on_g_b) (val_on_h_c) (val_on_i_k) (val_on_j_h) (val_on_k_f) (val_on_l_o) (val_on_m_p) (val_on_n_l) (val_on_o_j) (val_on_p_a) (val_on_q_n) (val_on_q_n-and-on_n_l-and-on_l_o-and-on_o_j-and-on_j_h-and-on_h_c-and-on_c_e-and-on_e_m-and-on_m_p-and-on_p_a-and-on_a_g-and-on_g_b-and-on_b_i-and-on_i_k-and-on_k_f-and-on_f_d))
    (:derived (val_on_a_g) (on a g))
     (:derived (val_on_b_i) (on b i))
     (:derived (val_on_c_e) (on c e))
     (:derived (val_on_e_m) (on e m))
     (:derived (val_on_f_d) (on f d))
     (:derived (val_on_g_b) (on g b))
     (:derived (val_on_h_c) (on h c))
     (:derived (val_on_i_k) (on i k))
     (:derived (val_on_j_h) (on j h))
     (:derived (val_on_k_f) (on k f))
     (:derived (val_on_l_o) (on l o))
     (:derived (val_on_m_p) (on m p))
     (:derived (val_on_n_l) (on n l))
     (:derived (val_on_o_j) (on o j))
     (:derived (val_on_p_a) (on p a))
     (:derived (val_on_q_n) (on q n))
     (:derived (val_on_q_n-and-on_n_l-and-on_l_o-and-on_o_j-and-on_j_h-and-on_h_c-and-on_c_e-and-on_e_m-and-on_m_p-and-on_p_a-and-on_a_g-and-on_g_b-and-on_b_i-and-on_i_k-and-on_k_f-and-on_f_d) (and (val_on_q_n) (val_on_n_l) (val_on_l_o) (val_on_o_j) (val_on_j_h) (val_on_h_c) (val_on_c_e) (val_on_e_m) (val_on_m_p) (val_on_p_a) (val_on_a_g) (val_on_g_b) (val_on_b_i) (val_on_i_k) (val_on_k_f) (val_on_f_d)))
    (:action pick-up
        :parameters (?x)
        :precondition (and (clear ?x) (ontable ?x) (emptyhand))
        :effect (and (and (not (ontable ?x)) (not (clear ?x)) (not (emptyhand)) (holding ?x)))
    )
     (:action put-down
        :parameters (?x)
        :precondition (holding ?x)
        :effect (and (and (not (holding ?x)) (clear ?x) (emptyhand) (ontable ?x)))
    )
     (:action stack
        :parameters (?x ?y)
        :precondition (and (holding ?x) (clear ?y))
        :effect (and (and (not (holding ?x)) (not (clear ?y)) (clear ?x) (emptyhand) (on ?x ?y)))
    )
     (:action unstack
        :parameters (?x ?y)
        :precondition (and (on ?x ?y) (clear ?x) (emptyhand))
        :effect (and (and (holding ?x) (clear ?y) (not (clear ?x)) (not (emptyhand)) (not (on ?x ?y))))
    )
)