(define (domain blocks-domain)
    (:requirements :conditional-effects :derived-predicates :negative-preconditions :strips)
    (:types block)
    (:predicates (clear ?x) (emptyhand) (holding ?x) (on ?x ?y) (ontable ?x) (val_on_a_l) (val_on_b_p) (val_on_d_g) (val_on_e_n) (val_on_f_m) (val_on_g_h) (val_on_h_o) (val_on_i_q) (val_on_j_f) (val_on_k_e) (val_on_k_e-and-on_e_n-and-on_n_r-and-on_r_d-and-on_d_g-and-on_g_h-and-on_h_o-and-on_o_a-and-on_a_l-and-on_l_j-and-on_j_f-and-on_f_m-and-on_m_i-and-on_i_q-and-on_q_b-and-on_b_p-and-on_p_t-and-on_t_s-and-on_s_c) (val_on_l_j) (val_on_m_i) (val_on_n_r) (val_on_o_a) (val_on_p_t) (val_on_q_b) (val_on_r_d) (val_on_s_c) (val_on_t_s))
    (:derived (val_on_a_l) (on a l))
     (:derived (val_on_b_p) (on b p))
     (:derived (val_on_d_g) (on d g))
     (:derived (val_on_e_n) (on e n))
     (:derived (val_on_f_m) (on f m))
     (:derived (val_on_g_h) (on g h))
     (:derived (val_on_h_o) (on h o))
     (:derived (val_on_i_q) (on i q))
     (:derived (val_on_j_f) (on j f))
     (:derived (val_on_k_e) (on k e))
     (:derived (val_on_k_e-and-on_e_n-and-on_n_r-and-on_r_d-and-on_d_g-and-on_g_h-and-on_h_o-and-on_o_a-and-on_a_l-and-on_l_j-and-on_j_f-and-on_f_m-and-on_m_i-and-on_i_q-and-on_q_b-and-on_b_p-and-on_p_t-and-on_t_s-and-on_s_c) (and (val_on_k_e) (val_on_e_n) (val_on_n_r) (val_on_r_d) (val_on_d_g) (val_on_g_h) (val_on_h_o) (val_on_o_a) (val_on_a_l) (val_on_l_j) (val_on_j_f) (val_on_f_m) (val_on_m_i) (val_on_i_q) (val_on_q_b) (val_on_b_p) (val_on_p_t) (val_on_t_s) (val_on_s_c)))
     (:derived (val_on_l_j) (on l j))
     (:derived (val_on_m_i) (on m i))
     (:derived (val_on_n_r) (on n r))
     (:derived (val_on_o_a) (on o a))
     (:derived (val_on_p_t) (on p t))
     (:derived (val_on_q_b) (on q b))
     (:derived (val_on_r_d) (on r d))
     (:derived (val_on_s_c) (on s c))
     (:derived (val_on_t_s) (on t s))
    (:action pick-up
        :parameters (?x)
        :precondition (and (clear ?x) (ontable ?x) (emptyhand))
        :effect (and (and (not (ontable ?x)) (not (clear ?x)) (not (emptyhand)) (holding ?x)))
    )
     (:action put-down
        :parameters (?x)
        :precondition (holding ?x)
        :effect (and (and (not (holding ?x)) (clear ?x) (emptyhand) (ontable ?x)))
    )
     (:action stack
        :parameters (?x ?y)
        :precondition (and (holding ?x) (clear ?y))
        :effect (and (and (not (holding ?x)) (not (clear ?y)) (clear ?x) (emptyhand) (on ?x ?y)))
    )
     (:action unstack
        :parameters (?x ?y)
        :precondition (and (on ?x ?y) (clear ?x) (emptyhand))
        :effect (and (and (holding ?x) (clear ?y) (not (clear ?x)) (not (emptyhand)) (not (on ?x ?y))))
    )
)