(define (domain blocks-domain)
    (:requirements :conditional-effects :derived-predicates :negative-preconditions :strips)
    (:types block)
    (:predicates (clear ?x) (emptyhand) (holding ?x) (on ?x ?y) (ontable ?x) (val_on_a_l) (val_on_b_n) (val_on_c_k) (val_on_d_j) (val_on_e_c) (val_on_f_s) (val_on_h_q) (val_on_h_q-and-on_q_p-and-on_p_a-and-on_a_l-and-on_l_r-and-on_r_i-and-on_i_d-and-on_d_j-and-on_j_b-and-on_b_n-and-on_n_f-and-on_f_s-and-on_s_m-and-on_m_o-and-on_o_e-and-on_e_c-and-on_c_k-and-on_k_g) (val_on_i_d) (val_on_j_b) (val_on_k_g) (val_on_l_r) (val_on_m_o) (val_on_n_f) (val_on_o_e) (val_on_p_a) (val_on_q_p) (val_on_r_i) (val_on_s_m))
    (:derived (val_on_a_l) (on a l))
     (:derived (val_on_b_n) (on b n))
     (:derived (val_on_c_k) (on c k))
     (:derived (val_on_d_j) (on d j))
     (:derived (val_on_e_c) (on e c))
     (:derived (val_on_f_s) (on f s))
     (:derived (val_on_h_q) (on h q))
     (:derived (val_on_h_q-and-on_q_p-and-on_p_a-and-on_a_l-and-on_l_r-and-on_r_i-and-on_i_d-and-on_d_j-and-on_j_b-and-on_b_n-and-on_n_f-and-on_f_s-and-on_s_m-and-on_m_o-and-on_o_e-and-on_e_c-and-on_c_k-and-on_k_g) (and (val_on_h_q) (val_on_q_p) (val_on_p_a) (val_on_a_l) (val_on_l_r) (val_on_r_i) (val_on_i_d) (val_on_d_j) (val_on_j_b) (val_on_b_n) (val_on_n_f) (val_on_f_s) (val_on_s_m) (val_on_m_o) (val_on_o_e) (val_on_e_c) (val_on_c_k) (val_on_k_g)))
     (:derived (val_on_i_d) (on i d))
     (:derived (val_on_j_b) (on j b))
     (:derived (val_on_k_g) (on k g))
     (:derived (val_on_l_r) (on l r))
     (:derived (val_on_m_o) (on m o))
     (:derived (val_on_n_f) (on n f))
     (:derived (val_on_o_e) (on o e))
     (:derived (val_on_p_a) (on p a))
     (:derived (val_on_q_p) (on q p))
     (:derived (val_on_r_i) (on r i))
     (:derived (val_on_s_m) (on s m))
    (:action pick-up
        :parameters (?x)
        :precondition (and (clear ?x) (ontable ?x) (emptyhand))
        :effect (and (and (not (ontable ?x)) (not (clear ?x)) (not (emptyhand)) (holding ?x)))
    )
     (:action put-down
        :parameters (?x)
        :precondition (holding ?x)
        :effect (and (and (not (holding ?x)) (clear ?x) (emptyhand) (ontable ?x)))
    )
     (:action stack
        :parameters (?x ?y)
        :precondition (and (holding ?x) (clear ?y))
        :effect (and (and (not (holding ?x)) (not (clear ?y)) (clear ?x) (emptyhand) (on ?x ?y)))
    )
     (:action unstack
        :parameters (?x ?y)
        :precondition (and (on ?x ?y) (clear ?x) (emptyhand))
        :effect (and (and (holding ?x) (clear ?y) (not (clear ?x)) (not (emptyhand)) (not (on ?x ?y))))
    )
)