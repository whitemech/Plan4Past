(define (domain blocks-domain)
    (:requirements :conditional-effects :derived-predicates :negative-preconditions :strips)
    (:types block)
    (:predicates (clear ?x) (emptyhand) (holding ?x) (on ?x ?y) (ontable ?x) (val_on_a_g) (val_on_b_i) (val_on_c_m) (val_on_d_t) (val_on_e_d) (val_on_f_u) (val_on_h_b) (val_on_i_r) (val_on_j_c) (val_on_k_h) (val_on_l_j) (val_on_m_n) (val_on_n_f) (val_on_o_p) (val_on_p_a) (val_on_q_l) (val_on_q_l-and-on_l_j-and-on_j_c-and-on_c_m-and-on_m_n-and-on_n_f-and-on_f_u-and-on_u_e-and-on_e_d-and-on_d_t-and-on_t_s-and-on_s_k-and-on_k_h-and-on_h_b-and-on_b_i-and-on_i_r-and-on_r_o-and-on_o_p-and-on_p_a-and-on_a_g) (val_on_r_o) (val_on_s_k) (val_on_t_s) (val_on_u_e))
    (:derived (val_on_a_g) (on a g))
     (:derived (val_on_b_i) (on b i))
     (:derived (val_on_c_m) (on c m))
     (:derived (val_on_d_t) (on d t))
     (:derived (val_on_e_d) (on e d))
     (:derived (val_on_f_u) (on f u))
     (:derived (val_on_h_b) (on h b))
     (:derived (val_on_i_r) (on i r))
     (:derived (val_on_j_c) (on j c))
     (:derived (val_on_k_h) (on k h))
     (:derived (val_on_l_j) (on l j))
     (:derived (val_on_m_n) (on m n))
     (:derived (val_on_n_f) (on n f))
     (:derived (val_on_o_p) (on o p))
     (:derived (val_on_p_a) (on p a))
     (:derived (val_on_q_l) (on q l))
     (:derived (val_on_q_l-and-on_l_j-and-on_j_c-and-on_c_m-and-on_m_n-and-on_n_f-and-on_f_u-and-on_u_e-and-on_e_d-and-on_d_t-and-on_t_s-and-on_s_k-and-on_k_h-and-on_h_b-and-on_b_i-and-on_i_r-and-on_r_o-and-on_o_p-and-on_p_a-and-on_a_g) (and (val_on_q_l) (val_on_l_j) (val_on_j_c) (val_on_c_m) (val_on_m_n) (val_on_n_f) (val_on_f_u) (val_on_u_e) (val_on_e_d) (val_on_d_t) (val_on_t_s) (val_on_s_k) (val_on_k_h) (val_on_h_b) (val_on_b_i) (val_on_i_r) (val_on_r_o) (val_on_o_p) (val_on_p_a) (val_on_a_g)))
     (:derived (val_on_r_o) (on r o))
     (:derived (val_on_s_k) (on s k))
     (:derived (val_on_t_s) (on t s))
     (:derived (val_on_u_e) (on u e))
    (:action pick-up
        :parameters (?x)
        :precondition (and (clear ?x) (ontable ?x) (emptyhand))
        :effect (and (and (not (ontable ?x)) (not (clear ?x)) (not (emptyhand)) (holding ?x)))
    )
     (:action put-down
        :parameters (?x)
        :precondition (holding ?x)
        :effect (and (and (not (holding ?x)) (clear ?x) (emptyhand) (ontable ?x)))
    )
     (:action stack
        :parameters (?x ?y)
        :precondition (and (holding ?x) (clear ?y))
        :effect (and (and (not (holding ?x)) (not (clear ?y)) (clear ?x) (emptyhand) (on ?x ?y)))
    )
     (:action unstack
        :parameters (?x ?y)
        :precondition (and (on ?x ?y) (clear ?x) (emptyhand))
        :effect (and (and (holding ?x) (clear ?y) (not (clear ?x)) (not (emptyhand)) (not (on ?x ?y))))
    )
)