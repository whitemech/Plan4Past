(define (domain blocks-domain)
    (:requirements :conditional-effects :derived-predicates :negative-preconditions :strips)
    (:types block)
    (:predicates (clear ?x) (emptyhand) (holding ?x) (on ?x ?y) (ontable ?x) (val_on_a_l) (val_on_b_d) (val_on_c_k) (val_on_d_f) (val_on_e_c) (val_on_f_e) (val_on_g_s) (val_on_h_o) (val_on_h_o-and-on_o_m-and-on_m_q-and-on_q_g-and-on_g_s-and-on_s_i-and-on_i_n-and-on_n_p-and-on_p_u-and-on_u_b-and-on_b_d-and-on_d_f-and-on_f_e-and-on_e_c-and-on_c_k-and-on_k_a-and-on_a_l-and-on_l_r-and-on_r_t-and-on_t_v-and-on_v_j) (val_on_i_n) (val_on_k_a) (val_on_l_r) (val_on_m_q) (val_on_n_p) (val_on_o_m) (val_on_p_u) (val_on_q_g) (val_on_r_t) (val_on_s_i) (val_on_t_v) (val_on_u_b) (val_on_v_j))
    (:derived (val_on_a_l) (on a l))
     (:derived (val_on_b_d) (on b d))
     (:derived (val_on_c_k) (on c k))
     (:derived (val_on_d_f) (on d f))
     (:derived (val_on_e_c) (on e c))
     (:derived (val_on_f_e) (on f e))
     (:derived (val_on_g_s) (on g s))
     (:derived (val_on_h_o) (on h o))
     (:derived (val_on_h_o-and-on_o_m-and-on_m_q-and-on_q_g-and-on_g_s-and-on_s_i-and-on_i_n-and-on_n_p-and-on_p_u-and-on_u_b-and-on_b_d-and-on_d_f-and-on_f_e-and-on_e_c-and-on_c_k-and-on_k_a-and-on_a_l-and-on_l_r-and-on_r_t-and-on_t_v-and-on_v_j) (and (val_on_h_o) (val_on_o_m) (val_on_m_q) (val_on_q_g) (val_on_g_s) (val_on_s_i) (val_on_i_n) (val_on_n_p) (val_on_p_u) (val_on_u_b) (val_on_b_d) (val_on_d_f) (val_on_f_e) (val_on_e_c) (val_on_c_k) (val_on_k_a) (val_on_a_l) (val_on_l_r) (val_on_r_t) (val_on_t_v) (val_on_v_j)))
     (:derived (val_on_i_n) (on i n))
     (:derived (val_on_k_a) (on k a))
     (:derived (val_on_l_r) (on l r))
     (:derived (val_on_m_q) (on m q))
     (:derived (val_on_n_p) (on n p))
     (:derived (val_on_o_m) (on o m))
     (:derived (val_on_p_u) (on p u))
     (:derived (val_on_q_g) (on q g))
     (:derived (val_on_r_t) (on r t))
     (:derived (val_on_s_i) (on s i))
     (:derived (val_on_t_v) (on t v))
     (:derived (val_on_u_b) (on u b))
     (:derived (val_on_v_j) (on v j))
    (:action pick-up
        :parameters (?x)
        :precondition (and (clear ?x) (ontable ?x) (emptyhand))
        :effect (and (and (not (ontable ?x)) (not (clear ?x)) (not (emptyhand)) (holding ?x)))
    )
     (:action put-down
        :parameters (?x)
        :precondition (holding ?x)
        :effect (and (and (not (holding ?x)) (clear ?x) (emptyhand) (ontable ?x)))
    )
     (:action stack
        :parameters (?x ?y)
        :precondition (and (holding ?x) (clear ?y))
        :effect (and (and (not (holding ?x)) (not (clear ?y)) (clear ?x) (emptyhand) (on ?x ?y)))
    )
     (:action unstack
        :parameters (?x ?y)
        :precondition (and (on ?x ?y) (clear ?x) (emptyhand))
        :effect (and (and (holding ?x) (clear ?y) (not (clear ?x)) (not (emptyhand)) (not (on ?x ?y))))
    )
)