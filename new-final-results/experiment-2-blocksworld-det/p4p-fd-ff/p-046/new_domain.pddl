(define (domain blocks-domain)
    (:requirements :conditional-effects :derived-predicates :negative-preconditions :strips)
    (:types block)
    (:predicates (clear ?x) (emptyhand) (holding ?x) (on ?x ?y) (ontable ?x) (val_on_a_s) (val_on_b_j) (val_on_c_t) (val_on_c_t-and-on_t_l-and-on_l_i-and-on_i_e-and-on_e_g-and-on_g_b-and-on_b_j-and-on_j_v-and-on_v_k-and-on_k_h-and-on_h_a-and-on_a_s-and-on_s_d-and-on_d_m-and-on_m_r-and-on_r_q-and-on_q_o-and-on_o_p-and-on_p_f-and-on_f_n-and-on_n_u) (val_on_d_m) (val_on_e_g) (val_on_f_n) (val_on_g_b) (val_on_h_a) (val_on_i_e) (val_on_j_v) (val_on_k_h) (val_on_l_i) (val_on_m_r) (val_on_n_u) (val_on_o_p) (val_on_p_f) (val_on_q_o) (val_on_r_q) (val_on_s_d) (val_on_t_l) (val_on_v_k))
    (:derived (val_on_a_s) (on a s))
     (:derived (val_on_b_j) (on b j))
     (:derived (val_on_c_t) (on c t))
     (:derived (val_on_c_t-and-on_t_l-and-on_l_i-and-on_i_e-and-on_e_g-and-on_g_b-and-on_b_j-and-on_j_v-and-on_v_k-and-on_k_h-and-on_h_a-and-on_a_s-and-on_s_d-and-on_d_m-and-on_m_r-and-on_r_q-and-on_q_o-and-on_o_p-and-on_p_f-and-on_f_n-and-on_n_u) (and (val_on_c_t) (val_on_t_l) (val_on_l_i) (val_on_i_e) (val_on_e_g) (val_on_g_b) (val_on_b_j) (val_on_j_v) (val_on_v_k) (val_on_k_h) (val_on_h_a) (val_on_a_s) (val_on_s_d) (val_on_d_m) (val_on_m_r) (val_on_r_q) (val_on_q_o) (val_on_o_p) (val_on_p_f) (val_on_f_n) (val_on_n_u)))
     (:derived (val_on_d_m) (on d m))
     (:derived (val_on_e_g) (on e g))
     (:derived (val_on_f_n) (on f n))
     (:derived (val_on_g_b) (on g b))
     (:derived (val_on_h_a) (on h a))
     (:derived (val_on_i_e) (on i e))
     (:derived (val_on_j_v) (on j v))
     (:derived (val_on_k_h) (on k h))
     (:derived (val_on_l_i) (on l i))
     (:derived (val_on_m_r) (on m r))
     (:derived (val_on_n_u) (on n u))
     (:derived (val_on_o_p) (on o p))
     (:derived (val_on_p_f) (on p f))
     (:derived (val_on_q_o) (on q o))
     (:derived (val_on_r_q) (on r q))
     (:derived (val_on_s_d) (on s d))
     (:derived (val_on_t_l) (on t l))
     (:derived (val_on_v_k) (on v k))
    (:action pick-up
        :parameters (?x)
        :precondition (and (clear ?x) (ontable ?x) (emptyhand))
        :effect (and (and (not (ontable ?x)) (not (clear ?x)) (not (emptyhand)) (holding ?x)))
    )
     (:action put-down
        :parameters (?x)
        :precondition (holding ?x)
        :effect (and (and (not (holding ?x)) (clear ?x) (emptyhand) (ontable ?x)))
    )
     (:action stack
        :parameters (?x ?y)
        :precondition (and (holding ?x) (clear ?y))
        :effect (and (and (not (holding ?x)) (not (clear ?y)) (clear ?x) (emptyhand) (on ?x ?y)))
    )
     (:action unstack
        :parameters (?x ?y)
        :precondition (and (on ?x ?y) (clear ?x) (emptyhand))
        :effect (and (and (holding ?x) (clear ?y) (not (clear ?x)) (not (emptyhand)) (not (on ?x ?y))))
    )
)