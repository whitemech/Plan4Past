(define (domain elevator)
	(:requirements :strips)
	(:types passenger floor)
	(:predicates (origin ?person - passenger ?floor - floor) (destin ?person - passenger ?floor - floor) (above ?floor1 - floor ?floor2 - floor) (boarded ?person - passenger) (not-boarded ?person - passenger) (served ?person - passenger) (not-served ?person - passenger) (lift-at ?floor - floor) (q1 ?person-00 - passenger ?person-01 - passenger) (q2 ?person-00 - passenger ?person-01 - passenger) (q3 ?person-00 - passenger ?person-01 - passenger) (q4 ?person-00 - passenger ?person-01 - passenger) (turnDomain))
	(:action board
		:parameters (?f - floor ?p - passenger)
		:precondition (and (lift-at ?f) (origin ?p ?f) (turnDomain))
		:effect (and (boarded ?p) (not (turnDomain)))
	)
	(:action depart
		:parameters (?f - floor ?p - passenger)
		:precondition (and (lift-at ?f) (destin ?p ?f) (boarded ?p) (turnDomain))
		:effect (and (not (boarded ?p)) (served ?p) (not (turnDomain)))
	)
	(:action up
		:parameters (?f1 - floor ?f2 - floor)
		:precondition (and (lift-at ?f1) (above ?f1 ?f2) (turnDomain))
		:effect (and (lift-at ?f2) (not (lift-at ?f1)) (not (turnDomain)))
	)
	(:action down
		:parameters (?f1 - floor ?f2 - floor)
		:precondition (and (lift-at ?f1) (above ?f2 ?f1) (turnDomain))
		:effect (and (lift-at ?f2) (not (lift-at ?f1)) (not (turnDomain)))
	)
	(:action trans-0
		:parameters (?person-00 - passenger ?person-01 - passenger)
		:precondition (and (q1 ?person-00 ?person-01) (not (served ?person-00)) (not (served ?person-01)) (not (turnDomain)))
		:effect (and (q1 ?person-00 ?person-01) (not (q2 ?person-00 ?person-01)) (not (q3 ?person-00 ?person-01)) (not (q4 ?person-00 ?person-01)) (turnDomain))
	)
	(:action trans-1
		:parameters (?person-00 - passenger ?person-01 - passenger)
		:precondition (and (or (and (q1 ?person-00 ?person-01) (not (served ?person-00)) (served ?person-01)) (and (q2 ?person-00 ?person-01) (not (served ?person-00)))) (not (turnDomain)))
		:effect (and (q2 ?person-00 ?person-01) (not (q1 ?person-00 ?person-01)) (not (q3 ?person-00 ?person-01)) (not (q4 ?person-00 ?person-01)) (turnDomain))
	)
	(:action trans-2
		:parameters (?person-00 - passenger ?person-01 - passenger)
		:precondition (and (or (and (q1 ?person-00 ?person-01) (served ?person-00) (not (served ?person-01))) (and (q3 ?person-00 ?person-01) (not (served ?person-01)))) (not (turnDomain)))
		:effect (and (q3 ?person-00 ?person-01) (not (q1 ?person-00 ?person-01)) (not (q2 ?person-00 ?person-01)) (not (q4 ?person-00 ?person-01)) (turnDomain))
	)
	(:action trans-3
		:parameters (?person-00 - passenger ?person-01 - passenger)
		:precondition (and (or (and (q1 ?person-00 ?person-01) (served ?person-00) (served ?person-01)) (and (q2 ?person-00 ?person-01) (served ?person-00)) (and (q3 ?person-00 ?person-01) (served ?person-01)) (q4 ?person-00 ?person-01)) (not (turnDomain)))
		:effect (and (q4 ?person-00 ?person-01) (not (q1 ?person-00 ?person-01)) (not (q2 ?person-00 ?person-01)) (not (q3 ?person-00 ?person-01)) (turnDomain))
	)
)