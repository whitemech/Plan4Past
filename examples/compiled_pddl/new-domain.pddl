(define (domain blocks)
    (:requirements :conditional-effects :derived-predicates :negative-preconditions :strips :typing)
    (:types block)
    (:predicates (Y-Oon_b_a) (clear ?x - block)  (handempty) (holding ?x - block)  (on ?x - block ?y - block)  (ontable ?x - block)  (val_Oon_b_a) (val_on_b_a) (val_ontable_c) (val_ontable_c-and-Oon_b_a))
    (:derived (val_Oon_b_a) (or (val_on_b_a) (Y-Oon_b_a)))
     (:derived (val_on_b_a) (on b a))
     (:derived (val_ontable_c) (ontable c))
     (:derived (val_ontable_c-and-Oon_b_a) (and (val_ontable_c) (val_Oon_b_a)))
    (:action pick-up
        :parameters (?x - block)
        :precondition (and (clear ?x) (ontable ?x) (handempty))
        :effect (and (and (not (ontable ?x)) (not (clear ?x)) (not (handempty)) (holding ?x)) (when (not (val_Oon_b_a)) (not (Y-Oon_b_a))) (when (val_Oon_b_a) (Y-Oon_b_a)))
    )
     (:action put-down
        :parameters (?x - block)
        :precondition (holding ?x)
        :effect (and (and (not (holding ?x)) (clear ?x) (handempty) (ontable ?x)) (when (not (val_Oon_b_a)) (not (Y-Oon_b_a))) (when (val_Oon_b_a) (Y-Oon_b_a)))
    )
     (:action stack
        :parameters (?x - block ?y - block)
        :precondition (and (holding ?x) (clear ?y))
        :effect (and (and (not (holding ?x)) (not (clear ?y)) (clear ?x) (handempty) (on ?x ?y)) (when (not (val_Oon_b_a)) (not (Y-Oon_b_a))) (when (val_Oon_b_a) (Y-Oon_b_a)))
    )
     (:action unstack
        :parameters (?x - block ?y - block)
        :precondition (and (on ?x ?y) (clear ?x) (handempty))
        :effect (and (and (holding ?x) (clear ?y) (not (clear ?x)) (not (handempty)) (not (on ?x ?y))) (when (not (val_Oon_b_a)) (not (Y-Oon_b_a))) (when (val_Oon_b_a) (Y-Oon_b_a)))
    )
)